{"version":3,"file":"static/js/432.90ea001c.chunk.js","mappings":"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","sources":["components/MovieList/MovieList.styled.js","components/SearchMovies/SearchMovies.styled.js","components/SearchMovies/SearchMovies.jsx","pages/Movies.jsx","services/api.js"],"sourcesContent":["// MovieList.styled.js\n\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const StyledSection = styled.section`\n  padding-right: 50px;\n  padding-left: 50px;\n`;\n\nexport const SectionTitle = styled.h2`\n  margin-top: 30px;\n  margin-bottom: 30px;\n  padding-left: 5px;\n  font-size: 30px;\n  font-weight: 600;\n  text-align: center;\n`;\n\nexport const List = styled.ul`\n  list-style: disc;\n  color: #0d57aa;\n`;\n\nexport const ListItem = styled.li`\n  &:not(:last-child) {\n    margin-bottom: 8px;\n  }\n`;\n\nexport const StyledLink = styled(Link)`\n  font-size: 20px;\n  color: #0d57aa;\n  transition: color 0.2s ease-in-out, border-bottom 0.2s ease-in-out;\n\n  &:hover,\n  &:focus {\n    color: #1c85ff;\n    border-bottom: 2px solid #1c85ff;\n  }\n`;\n","// SearchMovies.styled.js\n\nimport styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n  margin-bottom: 20px;\n`;\n\nexport const Input = styled.input`\n  border: 1px solid #ccc;\n  border-radius: 4px;\n  padding: 8px;\n  margin-right: 15px;\n  font-size: 16px;\n`;\n\nexport const Button = styled.button`\n  background-color: #b5d1f2;\n  border: 1px solid #0d57aa;\n  border-radius: 4px;\n  padding: 8px 18px;\n  font-size: 16px;\n  cursor: pointer;\n  transition: background-color 0.2s ease-in-out, color 0.2s ease-in-out;\n\n  &:hover,\n  &:focus {\n    background-color: #0d57aa;\n    color: #ffffff;\n  }\n`;\n","// SearchMovies.jsx\n\n// Importujemy wymagane zależności i komponenty\nimport PropTypes from 'prop-types'; // Biblioteka do sprawdzania typów przekazywanych propsów\nimport { toast } from 'react-hot-toast'; // Biblioteka do wyświetlania powiadomień\nimport { Button, Form, Input } from './SearchMovies.styled'; // Stylizowane komponenty do formularza wyszukiwania\n\n// Komponent obsługujący formularz wyszukiwania filmów\nconst SearchMovies = ({ onSubmit }) => {\n  // Funkcja obsługująca złożenie formularza\n  const handleSubmit = e => {\n    e.preventDefault(); // Zatrzymuje domyślne zachowanie przeglądarki dla zdarzenia submit\n\n    const query = e.target.elements.query.value; // Pobiera wartość pola wyszukiwania\n\n    // Sprawdza, czy pole wyszukiwania jest puste\n    if (!query) {\n      toast.error('Please enter something'); // Wyświetla powiadomienie o braku wprowadzonych danych\n      return;\n    }\n\n    onSubmit(query); // Wywołuje funkcję przekazaną przez props onSubmit z wartością z pola wyszukiwania\n    e.target.reset(); // Czyści zawartość pola wyszukiwania po złożeniu formularza\n  };\n\n  // Renderuje formularz wyszukiwania\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Input name=\"query\" type=\"text\" placeholder=\"Search movies\" />{' '}\n      {/* Pole tekstowe do wprowadzania zapytania */}\n      <Button type=\"submit\">Search</Button>{' '}\n      {/* Przycisk do złożenia formularza */}\n    </Form>\n  );\n};\n\n// Określa typy przekazywanych propsów\nSearchMovies.propTypes = { onSubmit: PropTypes.func.isRequired }; // Funkcja onSubmit jest wymaganym props'em i musi być funkcją\n\nexport default SearchMovies; // Eksportuje komponent SearchMovies\n","// Movies.jsx\n\n// Importujemy potrzebne zależności i komponenty\nimport { useEffect, useState } from 'react'; // Hooki useEffect i useState z Reacta\nimport { toast } from 'react-hot-toast'; // Plugin do wyświetlania powiadomień\nimport { useLocation, useSearchParams } from 'react-router-dom'; // Hooki do pracy z parametrami URL\nimport {\n  List,\n  ListItem,\n  SectionTitle,\n  StyledLink,\n  StyledSection,\n} from '../components/MovieList/MovieList.styled'; // Stylizowane komponenty dla listy filmów\nimport SearchMovies from '../components/SearchMovies/SearchMovies'; // Komponent do wyszukiwania filmów\nimport { fetchMovieByName } from '../services/api'; // Funkcja do pobierania filmów\n\n// Komponent Movies\nconst Movies = () => {\n  // Stan przechowujący listę filmów\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams(); // Hook do obsługi parametrów URL\n  const location = useLocation(); // Aktualna lokalizacja\n\n  // Efekt pobierający filmy na podstawie zapytania w adresie URL\n  useEffect(() => {\n    const query = searchParams.get('query') ?? ''; // Pobieramy zapytanie z adresu URL lub ustawiamy pusty ciąg znaków, jeśli brak\n    if (!query) return; // Jeśli brak zapytania, nie wykonujemy dalszych działań\n\n    // Funkcja asynchroniczna do pobierania filmów na podstawie zapytania\n    const getMovie = async () => {\n      try {\n        const { results } = await fetchMovieByName(query); // Pobieramy filmy na podstawie zapytania\n\n        if (results.length === 0) {\n          // Jeśli nie znaleziono filmów, wyświetlamy powiadomienie\n          toast.dismiss(); // Ukrywamy poprzednie powiadomienie\n          toast.error('No movies found'); // Wyświetlamy powiadomienie o braku filmów\n          setMovies([]); // Czyścimy listę filmów\n        } else {\n          setMovies(results); // Ustawiamy listę znalezionych filmów\n        }\n      } catch (error) {\n        toast.error(error.message); // Wyświetlamy powiadomienie o błędzie\n        setMovies([]); // Czyścimy listę filmów\n      }\n    };\n\n    getMovie(); // Wywołujemy funkcję pobierającą filmy na podstawie zapytania\n  }, [searchParams]); // Efekt wywoływany przy zmianie parametrów URL\n\n  // Funkcja obsługująca przesłanie formularza wyszukiwania filmów\n  const handleSubmit = query => {\n    setSearchParams({ query }); // Ustawiamy zapytanie w parametrach URL\n  };\n\n  // Zwracamy treść komponentu\n  return (\n    <main>\n      <StyledSection>\n        {/* Tytuł sekcji */}\n        <SectionTitle>Movies Page</SectionTitle>\n        {/* Komponent do wyszukiwania filmów */}\n        <SearchMovies onSubmit={handleSubmit} />\n        {/* Lista filmów */}\n        <List>\n          {movies.map(movie => (\n            <ListItem key={movie.id}>\n              {/* Link do strony z danymi o filmie */}\n              <StyledLink to={`/movies/${movie.id}`} state={{ from: location }}>\n                {movie.title}\n              </StyledLink>\n            </ListItem>\n          ))}\n        </List>\n      </StyledSection>\n    </main>\n  );\n};\n\nexport default Movies; // Eksportujemy komponent Movies\n","import axios from 'axios';\n\nconst baseURL = 'https://api.themoviedb.org';\nconst API_KEY = 'c94d8e5ef8b4fe69956b21ebd01a6f37';\n\n// const AUTHORIZATION =\n//   'eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJjOTRkOGU1ZWY4YjRmZTY5OTU2YjIxZWJkMDFhNmYzNyIsInN1YiI6IjY1ZTg1MDMxM2ZlMTYwMDE2MjVjZTg3ZiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.ut43gbHMar0hOfK1FZIIz0nwPLqmUTw0HqWj4r3u8m4';\n\nexport const fetchTrendMovies = async () => {\n  const { data } = await axios.get(\n    `https://api.themoviedb.org/3/trending/movie/day?api_key=${API_KEY}`\n  );\n\n  return data;\n};\n\nexport const fetchMovieByName = async query => {\n  const { data } = await axios.get(\n    `${baseURL}/3/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n  );\n\n  return data;\n};\n\nexport const fetchMovieById = async movieId => {\n  const { data } = await axios.get(\n    `${baseURL}/3/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n\n  return data;\n};\n\nexport const fetchMovieCast = async movieId => {\n  const { data } = await axios.get(\n    `${baseURL}/3/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n\n  return data;\n};\n\nexport const fetchMovieReviews = async movieId => {\n  const { data } = await axios.get(\n    `${baseURL}/3/movie/${movieId}}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n\n  return data;\n};\n"],"names":["StyledSection","styled","_templateObject","_taggedTemplateLiteral","SectionTitle","_templateObject2","List","_templateObject3","ListItem","_templateObject4","StyledLink","Link","_templateObject5","Form","Input","Button","_ref","onSubmit","_jsxs","e","preventDefault","query","target","elements","value","reset","toast","children","_jsx","name","type","placeholder","_useState","useState","_useState2","_slicedToArray","movies","setMovies","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","location","useLocation","useEffect","_searchParams$get","get","getMovie","_asyncToGenerator","_regeneratorRuntime","_callee","_yield$fetchMovieByNa","results","_context","prev","next","fetchMovieByName","sent","length","t0","message","stop","apply","arguments","SearchMovies","map","movie","to","concat","id","state","from","title","baseURL","API_KEY","fetchTrendMovies","_yield$axios$get","data","axios","abrupt","_ref2","_callee2","_yield$axios$get2","_context2","_x","fetchMovieById","_ref3","_callee3","movieId","_yield$axios$get3","_context3","_x2","fetchMovieCast","_ref4","_callee4","_yield$axios$get4","_context4","_x3","fetchMovieReviews","_ref5","_callee5","_yield$axios$get5","_context5","_x4"],"sourceRoot":""}