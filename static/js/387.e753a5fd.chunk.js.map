{"version":3,"file":"static/js/387.e753a5fd.chunk.js","mappings":"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","sources":["components/Cast/Cast.styled.js","components/Cast/Cast.jsx","services/api.js"],"sourcesContent":["// Cast.styled.js\n\nimport styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  margin-top: 30px;\n  padding-right: 80px;\n  padding-left: 80px;\n  padding-bottom: 40px;\n`;\n\nexport const CastHeader = styled.h3`\n  font-size: 25px;\n  font-weight: 500;\n  text-align: center;\n`;\n\nexport const CastList = styled.ul`\n  margin-top: 30px;\n  display: flex;\n  align-items: center;\n  gap: 40px;\n  flex-wrap: wrap;\n`;\n\nexport const CastListItem = styled.li`\n  width: calc((100% - 4 * 40px) / 5);\n  height: 400px;\n  word-wrap: break-word;\n`;\n\nexport const CastInfo = styled.div`\n  margin-top: 20px;\n  max-width: 220px;\n`;\n\nexport const CastName = styled.h3`\n  margin-bottom: 10px;\n`;\n\nexport const NoCastText = styled.p`\n  margin: 30px auto 0 auto;\n  text-align: center;\n  padding: 20px;\n  background-color: #f8f8f8;\n  border-radius: 5px;\n  box-shadow: 0 0 5px rgba(0, 0, 0, 0.2);\n  max-width: 500px;\n`;\n","// Cast.jsx\n\n// Importujemy potrzebne zależności i komponenty\nimport { useEffect, useState } from 'react'; // Hooki useEffect i useState z Reacta\nimport { useParams } from 'react-router-dom'; // Hook do pobierania parametrów z adresu URL\nimport { fetchMovieCast } from '../../services/api'; // Funkcja do pobierania obsady filmu\nimport {\n  CastHeader,\n  CastInfo,\n  CastList,\n  CastListItem,\n  CastName,\n  NoCastText,\n  Wrapper,\n} from './Cast.styled'; // Stylizowane komponenty dla sekcji obsady\n\n// Komponent obsady filmu\nconst Cast = () => {\n  const { movieId } = useParams(); // Pobieramy identyfikator filmu z adresu URL\n  const [cast, setCast] = useState([]); // Stan przechowujący listę aktorów\n\n  // Efekt pobierający obsadę filmu na podstawie jego identyfikatora\n  useEffect(() => {\n    const fetchCast = async () => {\n      try {\n        const { cast } = await fetchMovieCast(movieId); // Pobieramy obsadę filmu z serwisu API\n        setCast(cast); // Ustawiamy pobraną obsadę w stanie\n      } catch (error) {\n        console.log(error); // W przypadku błędu logujemy go do konsoli\n      }\n    };\n\n    fetchCast(); // Wywołujemy funkcję pobierającą obsadę filmu\n  }, [movieId]); // Efekt wywołujemy ponownie przy zmianie identyfikatora filmu\n\n  // Zwracamy treść komponentu\n  return (\n    <Wrapper>\n      {/* Nagłówek sekcji z nazwą \"Cast\" */}\n      <CastHeader>Cast</CastHeader>\n      {/* Sprawdzamy czy lista obsady nie jest pusta */}\n      {cast.length ? (\n        <CastList>\n          {/* Mapujemy po liście aktorów i tworzymy dla nich odpowiednie komponenty */}\n          {cast.map(actor => (\n            <CastListItem className=\"cast-card\" key={actor.id}>\n              {/* Sprawdzamy czy aktor ma przypisaną ścieżkę do zdjęcia profilowego */}\n              {actor.profile_path ? (\n                // Jeśli tak, wyświetlamy zdjęcie z serwera TMDB\n                <img\n                  src={`https://image.tmdb.org/t/p/w200${actor.profile_path}`}\n                  alt={`${actor.name} profile`}\n                />\n              ) : (\n                // Jeśli nie, wyświetlamy domyślne zdjęcie zastępcze\n                <img\n                  src={`https://via.placeholder.com/200x300?text=No+Image`}\n                  alt={`${actor.name} profile`}\n                />\n              )}\n\n              {/* Wyświetlamy informacje o aktorze, w tym jego imię i nazwisko oraz rolę w filmie */}\n              <CastInfo>\n                <CastName>{actor.name}</CastName>\n                <p>Character: {actor.character}</p>\n              </CastInfo>\n            </CastListItem>\n          ))}\n        </CastList>\n      ) : (\n        // Jeśli lista obsady jest pusta, wyświetlamy odpowiedni komunikat\n        <NoCastText>\n          We don't have any information about the cast yet.\n        </NoCastText>\n      )}\n    </Wrapper>\n  );\n};\n\nexport default Cast; // Eksportujemy komponent obsady filmu\n","import axios from 'axios';\n\nconst baseURL = 'https://api.themoviedb.org';\nconst API_KEY = 'c94d8e5ef8b4fe69956b21ebd01a6f37';\n\n// const AUTHORIZATION =\n//   'eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJjOTRkOGU1ZWY4YjRmZTY5OTU2YjIxZWJkMDFhNmYzNyIsInN1YiI6IjY1ZTg1MDMxM2ZlMTYwMDE2MjVjZTg3ZiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.ut43gbHMar0hOfK1FZIIz0nwPLqmUTw0HqWj4r3u8m4';\n\nexport const fetchTrendMovies = async () => {\n  const { data } = await axios.get(\n    `https://api.themoviedb.org/3/trending/movie/day?api_key=${API_KEY}`\n  );\n\n  return data;\n};\n\nexport const fetchMovieByName = async query => {\n  const { data } = await axios.get(\n    `${baseURL}/3/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n  );\n\n  return data;\n};\n\nexport const fetchMovieById = async movieId => {\n  const { data } = await axios.get(\n    `${baseURL}/3/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n\n  return data;\n};\n\nexport const fetchMovieCast = async movieId => {\n  const { data } = await axios.get(\n    `${baseURL}/3/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n\n  return data;\n};\n\nexport const fetchMovieReviews = async movieId => {\n  const { data } = await axios.get(\n    `${baseURL}/3/movie/${movieId}}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n\n  return data;\n};\n"],"names":["Wrapper","styled","_templateObject","_taggedTemplateLiteral","CastHeader","_templateObject2","CastList","_templateObject3","CastListItem","_templateObject4","CastInfo","_templateObject5","CastName","_templateObject6","NoCastText","_templateObject7","movieId","useParams","_useState","useState","_useState2","_slicedToArray","cast","setCast","useEffect","fetchCast","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","_yield$fetchMovieCast","_cast","_context","prev","next","fetchMovieCast","sent","t0","console","log","stop","apply","arguments","_jsxs","children","_jsx","length","map","actor","className","profile_path","src","concat","alt","name","character","id","baseURL","API_KEY","fetchTrendMovies","_yield$axios$get","data","axios","abrupt","fetchMovieByName","_ref2","_callee2","query","_yield$axios$get2","_context2","_x","fetchMovieById","_ref3","_callee3","_yield$axios$get3","_context3","_x2","_ref4","_callee4","_yield$axios$get4","_context4","_x3","fetchMovieReviews","_ref5","_callee5","_yield$axios$get5","_context5","_x4"],"sourceRoot":""}