{"version":3,"file":"static/js/134.3c8924fe.chunk.js","mappings":"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","sources":["components/MovieCard/MovieCard.styled.js","components/MovieCard/MovieCard.jsx","components/MovieDetails/MovieDetails.styled.js","components/MovieDetails/MovieDetails.jsx","components/SharedLayout/LoadingDots.jsx","components/SharedLayout/SharedLayout.styled.js","services/api.js"],"sourcesContent":["// MovieCard.styled.js\n\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const MovieCardContainer = styled.div`\n  display: flex;\n  gap: 40px;\n  margin-top: 20px;\n`;\n\nexport const Img = styled.img`\n  height: 600px;\n  width: 400px;\n  border-radius: 30px;\n`;\n\nexport const MovieInfo = styled.div`\n  padding-top: 20px;\n  max-width: 1100px;\n`;\n\nexport const MovieName = styled.h2`\n  margin-bottom: 20px;\n`;\n\nexport const MovieInfoText = styled.p`\n  &:not(:last-child) {\n    margin-bottom: 20px;\n  }\n`;\n\nexport const MovieInfoTextBold = styled.span`\n  display: block;\n  margin-bottom: 20px;\n  font-size: 20px;\n  font-weight: 500;\n`;\n\nexport const MoreInfoWrapper = styled.div`\n  margin-top: 20px;\n  padding-top: 20px;\n  padding-bottom: 20px;\n  border-top: 1px solid #d3d3d3;\n  border-bottom: 1px solid #d3d3d3;\n`;\n\nexport const MoreInfoHeader = styled.h3`\n  font-size: 25px;\n  font-weight: 500;\n`;\n\nexport const List = styled.ul`\n  margin-top: 20px;\n  display: flex;\n  gap: 20px;\n  font-size: 18px;\n`;\n\nexport const ListItem = styled.li`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const StyledLink = styled(Link)`\n  font-size: 16px;\n  margin-right: 5px;\n  padding: 5px 15px;\n  border: 1px solid #0d57aa;\n  border-radius: 6px;\n  background-color: #b5d1f2;\n  box-shadow: 0px 0px 5px rgba(0, 0, 0, 0.2);\n  transition: all 0.2s ease-in-out;\n  text-decoration: none;\n  color: #0d57aa;\n\n  &:hover,\n  &:focus {\n    background-color: #0d57aa;\n    color: #ffffff;\n    box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.3);\n  }\n`;\n","// MovieCard.jsx\n\n// Importujemy potrzebne zależności i komponenty\nimport { LoadingIndicator } from 'components/SharedLayout/LoadingDots'; // Komponent wskaźnika ładowania\nimport PropTypes from 'prop-types'; // Biblioteka do sprawdzania typów przekazywanych propsów\nimport { useLocation } from 'react-router-dom'; // Hook do pobierania informacji o bieżącym adresie URL\nimport {\n  Img,\n  List,\n  ListItem,\n  MoreInfoHeader,\n  MoreInfoWrapper,\n  MovieCardContainer,\n  MovieInfo,\n  MovieInfoText,\n  MovieInfoTextBold,\n  MovieName,\n  StyledLink,\n} from './MovieCard.styled'; // Stylizowane komponenty dla sekcji karty filmowej\n\n// Komponent karty filmowej\nconst MovieCard = ({ movie }) => {\n  // Wyodrębniamy potrzebne informacje o filmie z przekazanych propsów\n  const { title, release_date, poster_path, vote_average, overview, genres } =\n    movie;\n\n  // Pobieramy informacje o bieżącym adresie URL\n  const location = useLocation();\n\n  // Tworzymy datę premiery filmu na podstawie dostarczonej daty\n  const releaseDate = new Date(release_date);\n  const releaseYear = isNaN(releaseDate)\n    ? 'Unknown'\n    : releaseDate.getFullYear();\n\n  // Tworzymy adres URL obrazu plakatu filmowego z uwzględnieniem dostępności\n  const posterUrl = poster_path\n    ? `https://image.tmdb.org/t/p/w400/${poster_path}`\n    : 'https://via.placeholder.com/400x600.png?text=Poster+Not+Available';\n\n  // Obliczamy ocenę filmu użytkownika i tworzymy odpowiednią wiadomość\n  const userScore = vote_average\n    ? `${(vote_average * 10).toFixed(0)}%`\n    : 'Not rated yet';\n\n  // Jeśli tytuł filmu nie został przekazany, wyświetlamy wskaźnik ładowania\n  if (!title) {\n    return <LoadingIndicator />;\n  }\n\n  // Zwracamy treść karty filmowej\n  return (\n    <>\n      {/* Kontener dla karty filmowej */}\n      <MovieCardContainer>\n        {/* Obrazek plakatu filmowego */}\n        <Img src={posterUrl} alt={`${title} poster`} />\n\n        {/* Informacje o filmie */}\n        <MovieInfo>\n          {/* Tytuł filmu i rok premiery */}\n          <MovieName>\n            {title ?? 'Unknown'} ({releaseYear})\n          </MovieName>\n          {/* Ocena użytkownika */}\n          <MovieInfoText>User Score: {userScore}</MovieInfoText>\n          {/* Opis filmu */}\n          <MovieInfoText>\n            <MovieInfoTextBold>Overview:</MovieInfoTextBold> {overview}\n          </MovieInfoText>\n\n          {/* Wyświetlanie gatunków filmu, jeśli są dostępne */}\n          {genres && genres.length > 0 && (\n            <MovieInfoText>\n              <MovieInfoTextBold>Genres:</MovieInfoTextBold>\n              {genres.map(genre => genre.name).join(', ')}\n            </MovieInfoText>\n          )}\n        </MovieInfo>\n      </MovieCardContainer>\n\n      {/* Sekcja dodatkowych informacji */}\n      <MoreInfoWrapper>\n        {/* Nagłówek sekcji */}\n        <MoreInfoHeader>Additional information</MoreInfoHeader>\n\n        {/* Lista linków do obsady i recenzji filmu */}\n        <List>\n          <ListItem>\n            {/* Link do sekcji z obsadą filmu */}\n            <StyledLink\n              to=\"cast\"\n              state={{ from: location?.state?.from ?? '/' }} // Parametr 'from' dla powrotu do poprzedniej strony\n            >\n              Cast\n            </StyledLink>\n          </ListItem>\n\n          <ListItem>\n            {/* Link do sekcji z recenzjami filmu */}\n            <StyledLink\n              to=\"reviews\"\n              state={{ from: location?.state?.from ?? '/' }} // Parametr 'from' dla powrotu do poprzedniej strony\n            >\n              Reviews\n            </StyledLink>\n          </ListItem>\n        </List>\n      </MoreInfoWrapper>\n    </>\n  );\n};\n\n// Sprawdzamy typy przekazywanych propsów\nMovieCard.propTypes = {\n  movie: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    release_date: PropTypes.string.isRequired,\n    poster_path: PropTypes.string.isRequired,\n    vote_average: PropTypes.number,\n    overview: PropTypes.string,\n    genres: PropTypes.arrayOf(\n      PropTypes.shape({ name: PropTypes.string.isRequired })\n    ),\n  }).isRequired,\n};\n\nexport default MovieCard; // Eksportujemy komponent karty filmowej\n","// MovieDetails.styled.js\n\nimport styled from 'styled-components';\n\nexport const Container = styled.div`\n  padding: 20px 40px;\n`;\n\nexport const Button = styled.button`\n  display: flex;\n  align-items: center;\n  font-size: 14px;\n  border: 1px solid #0d57aa;\n  border-radius: 6px;\n  background-color: #b5d1f2;\n  transition: color 0.2s ease-in-out, background-color 0.2s ease-in-out;\n\n  &:hover,\n  &:focus {\n    background-color: #0d57aa;\n    color: #ffffff;\n  }\n`;\n","// MovieDetails.jsx\n\n// Importujemy potrzebne zależności i komponenty\nimport { LoadingIndicator } from 'components/SharedLayout/LoadingDots'; // Komponent wskaźnika ładowania\nimport { Suspense, useEffect, useState } from 'react'; // Importujemy hooki useEffect, useState i komponent Suspense z Reacta\nimport { BsArrowLeftShort } from 'react-icons/bs'; // Ikona strzałki w lewo\nimport { Link, Outlet, useLocation, useParams } from 'react-router-dom'; // Hooki i komponenty związane z routerem\nimport { fetchMovieById } from '../../services/api'; // Funkcja do pobierania danych o filmie\nimport MovieCard from '../MovieCard/MovieCard'; // Komponent karty filmu\nimport { Button, Container } from './MovieDetails.styled'; // Stylizowane komponenty dla szczegółów filmu\n\n// Komponent MovieDetails\nconst MovieDetails = () => {\n  // Pobieramy parametry z adresu URL\n  const { movieId } = useParams(); // ID filmu\n  const location = useLocation(); // Aktualna lokalizacja\n  const [selectedMovie, setSelectedMovie] = useState({}); // Stan przechowujący wybrany film\n\n  // Efekt pobierający dane o wybranym filmie przy załadowaniu komponentu lub zmianie ID filmu\n  useEffect(() => {\n    // Funkcja asynchroniczna do pobierania danych o filmie na podstawie jego ID\n    const fetchSelectedMovie = async movieId => {\n      try {\n        const movieData = await fetchMovieById(movieId); // Pobieramy dane o filmie\n        setSelectedMovie(movieData); // Ustawiamy dane o filmie w stanie komponentu\n      } catch (error) {\n        console.log(error); // Obsługa błędu w przypadku niepowodzenia pobierania danych\n      }\n    };\n\n    fetchSelectedMovie(movieId); // Wywołujemy funkcję pobierającą dane o filmie\n  }, [movieId]); // Efekt wywoływany przy zmianie ID filmu\n\n  // Zwracamy treść komponentu\n  return (\n    <main>\n      <Container>\n        {/* Przycisk do powrotu do poprzedniej strony */}\n        <Link to={location?.state?.from ?? '/'}>\n          <Button type=\"button\">\n            <BsArrowLeftShort\n              style={{ width: '25px', height: '25px', display: 'inline-block' }}\n            />\n            Powrót\n          </Button>\n        </Link>\n        {/* Komponent wyświetlający kartę filmu */}\n        <MovieCard movie={selectedMovie} />\n        {/* Wyświetlenie zawartości zagnieżdżonych tras */}\n        <Suspense fallback={<LoadingIndicator />}>\n          <Outlet />\n        </Suspense>\n      </Container>\n    </main>\n  );\n};\n\nexport default MovieDetails; // Eksportujemy komponent MovieDetails\n","// LoadingDots.jsx\n\n// Importujemy wymagane zależności i komponenty stylizowane\nimport { Dot, LoadingDots } from './SharedLayout.styled'; // Importujemy komponenty stylizowane z pliku SharedLayout.styled\n\n// Komponent LoadingIndicator renderuje animowany wskaźnik ładowania w postaci kropek\nexport const LoadingIndicator = () => {\n  return (\n    // Komponent LoadingDots definiuje kontener dla animowanych kropek\n    <LoadingDots>\n      {/* Komponent Dot reprezentuje pojedynczą kropkę z opcjonalnym opóźnieniem */}\n      <Dot delay=\"0s\" /> {/* Pierwsza kropka bez opóźnienia */}\n      <Dot delay=\".2s\" /> {/* Druga kropka z opóźnieniem 0.2 sekundy */}\n      <Dot delay=\".4s\" /> {/* Trzecia kropka z opóźnieniem 0.4 sekundy */}\n    </LoadingDots>\n  );\n};\n","// SharedLauout.styled.js\n\nimport { NavLink } from 'react-router-dom';\nimport styled, { keyframes } from 'styled-components';\n\nexport const StyledHeader = styled.header`\n  padding: 20px 30px;\n  text-align: center;\n  box-shadow: 0px 4px 4px #d3d3d3;\n`;\n\nexport const StyledNavLink = styled(NavLink)`\n  display: inline-block;\n  font-size: 24px;\n  font-weight: 500;\n  text-decoration: none;\n  transition: color 0.2s ease-in-out;\n  color: #000000;\n\n  &:not(:last-child) {\n    margin-right: 40px;\n  }\n\n  &.active,\n  &:hover,\n  &:focus {\n    color: #1c85ff;\n    text-decoration: underline;\n  }\n`;\n\nconst bounce = keyframes`\n  0%, 80%, 100% {\n    transform: scale(0);\n  }\n  40% {\n    transform: scale(1);\n  }\n`;\n\nexport const LoadingDots = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 100vh;\n`;\n\nexport const Dot = styled.div`\n  display: inline-block;\n  width: 20px;\n  height: 20px;\n  margin-right: 10px;\n  border-radius: 50%;\n  background-color: #dc143c;\n  animation: ${bounce} 1s infinite ease-in-out;\n  animation-delay: ${({ delay }) => delay};\n`;\n","// api.js\n\nimport axios from 'axios';\n\nconst baseURL = 'https://api.themoviedb.org';\nconst API_KEY = 'c94d8e5ef8b4fe69956b21ebd01a6f37';\n\n// const AUTHORIZATION =\n//   'eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJjOTRkOGU1ZWY4YjRmZTY5OTU2YjIxZWJkMDFhNmYzNyIsInN1YiI6IjY1ZTg1MDMxM2ZlMTYwMDE2MjVjZTg3ZiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.ut43gbHMar0hOfK1FZIIz0nwPLqmUTw0HqWj4r3u8m4';\n\nexport const fetchTrendMovies = async () => {\n  const { data } = await axios.get(\n    `https://api.themoviedb.org/3/trending/movie/day?api_key=${API_KEY}`\n  );\n\n  return data;\n};\n\nexport const fetchMovieByName = async query => {\n  const { data } = await axios.get(\n    `${baseURL}/3/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n  );\n\n  return data;\n};\n\nexport const fetchMovieById = async movieId => {\n  const { data } = await axios.get(\n    `${baseURL}/3/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n\n  return data;\n};\n\nexport const fetchMovieCast = async movieId => {\n  const { data } = await axios.get(\n    `${baseURL}/3/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n\n  return data;\n};\n\nexport const fetchMovieReviews = async movieId => {\n  const { data } = await axios.get(\n    `${baseURL}/3/movie/${movieId}}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n\n  return data;\n};\n"],"names":["MovieCardContainer","styled","_templateObject","_taggedTemplateLiteral","Img","_templateObject2","MovieInfo","_templateObject3","MovieName","_templateObject4","MovieInfoText","_templateObject5","MovieInfoTextBold","_templateObject6","MoreInfoWrapper","_templateObject7","MoreInfoHeader","_templateObject8","List","_templateObject9","ListItem","_templateObject10","StyledLink","Link","_templateObject11","_ref","_location$state$from","_location$state","_location$state$from2","_location$state2","movie","title","release_date","poster_path","vote_average","overview","genres","location","useLocation","releaseDate","Date","releaseYear","isNaN","getFullYear","posterUrl","concat","userScore","toFixed","_jsxs","_Fragment","children","_jsx","src","alt","length","map","genre","name","join","to","state","from","LoadingIndicator","Container","Button","movieId","useParams","_useState","useState","_useState2","_slicedToArray","selectedMovie","setSelectedMovie","useEffect","fetchSelectedMovie","_asyncToGenerator","_regeneratorRuntime","_callee","movieData","_context","prev","next","fetchMovieById","sent","t0","console","log","stop","_x","apply","arguments","type","BsArrowLeftShort","style","width","height","display","MovieCard","Suspense","fallback","Outlet","LoadingDots","Dot","delay","StyledHeader","StyledNavLink","NavLink","bounce","keyframes","baseURL","API_KEY","fetchTrendMovies","_yield$axios$get","data","axios","abrupt","fetchMovieByName","_ref2","_callee2","query","_yield$axios$get2","_context2","_ref3","_callee3","_yield$axios$get3","_context3","_x2","fetchMovieCast","_ref4","_callee4","_yield$axios$get4","_context4","_x3","fetchMovieReviews","_ref5","_callee5","_yield$axios$get5","_context5","_x4"],"sourceRoot":""}