{"version":3,"file":"static/js/779.563329d5.chunk.js","mappings":"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","sources":["components/Reviews/Reviews.styled.js","components/Reviews/Reviews.jsx","services/api.js"],"sourcesContent":["// Reviews.styled.js\n\nimport styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  margin-top: 30px;\n  padding-right: 40px;\n  padding-left: 40px;\n  padding-bottom: 40px;\n`;\n\nexport const ReviewHeader = styled.h3`\n  font-size: 25px;\n  font-weight: 500;\n  text-align: center;\n`;\n\nexport const ReviewList = styled.ul`\n  margin-top: 30px;\n  display: flex;\n  align-items: center;\n  gap: 40px;\n  flex-wrap: wrap;\n`;\n\nexport const ReviewListItem = styled.li`\n  padding-bottom: 10px;\n  border-bottom: 1px solid #d3d3d3;\n`;\n\nexport const Author = styled.h4`\n  margin-bottom: 10px;\n  font-size: 20px;\n  font-weight: 500;\n`;\n\nexport const Review = styled.p`\n  line-height: 1.3;\n`;\n\nexport const NoReviewsText = styled.p`\n  margin: 30px auto 0 auto;\n  text-align: center;\n  padding: 20px;\n  background-color: #f8f8f8;\n  border-radius: 5px;\n  box-shadow: 0 0 5px rgba(0, 0, 0, 0.2);\n  max-width: 500px;\n`;\n","// Reviews.jsx\n\n// Importujemy potrzebne zależności i komponenty\nimport { useEffect, useState } from 'react'; // Hooki do obsługi efektów i stanu\nimport { useParams } from 'react-router-dom'; // Hook do dostępu do parametrów bieżącego URL\nimport { fetchMovieReviews } from '../../services/api'; // Funkcja do pobierania recenzji filmów\nimport {\n  Author,\n  NoReviewsText,\n  Review,\n  ReviewHeader,\n  ReviewList,\n  ReviewListItem,\n  Wrapper,\n} from './Reviews.styled'; // Stylizowane komponenty dla sekcji recenzji filmu\n\n// Komponent obsługujący wyświetlanie recenzji filmu\nconst Reviews = () => {\n  const { movieId } = useParams(); // Pobieramy id filmu z parametrów URL\n  const [reviews, setReviews] = useState([]); // Stan przechowujący listę recenzji filmu\n\n  // Efekt pobierający recenzje filmu po załadowaniu komponentu\n  useEffect(() => {\n    const fetchReviews = async () => {\n      try {\n        const { results } = await fetchMovieReviews(movieId); // Pobieramy recenzje filmu\n        setReviews(results); // Ustawiamy pobrane recenzje w stanie komponentu\n      } catch (error) {\n        console.log(error); // Obsługujemy ewentualny błąd\n      }\n    };\n\n    fetchReviews(); // Wywołujemy funkcję pobierającą recenzje filmu\n  }, [movieId]); // Efekt wykona się ponownie tylko wtedy, gdy zmieni się id filmu\n\n  return (\n    <Wrapper>\n      <ReviewHeader>Reviews</ReviewHeader> {/* Nagłówek sekcji recenzji */}\n      {/* Warunek sprawdzający czy są dostępne recenzje */}\n      {reviews.length ? (\n        <ReviewList className=\"reviews-container\">\n          {/* Mapujemy listę recenzji i renderujemy dla każdej recenzji odpowiedni element */}\n          {reviews.map(review => (\n            <ReviewListItem className=\"review-card\" key={review.id}>\n              <Author>Author: {review.author}</Author>{' '}\n              {/* Wyświetlamy autora recenzji */}\n              <Review>{review.content}</Review>{' '}\n              {/* Wyświetlamy treść recenzji */}\n            </ReviewListItem>\n          ))}\n        </ReviewList>\n      ) : (\n        <NoReviewsText>\n          We don't have any reviews for this movie yet.{' '}\n          {/* Komunikat informujący o braku recenzji */}\n        </NoReviewsText>\n      )}\n    </Wrapper>\n  );\n};\n\nexport default Reviews; // Eksportujemy komponent Reviews\n","import axios from 'axios';\n\nconst baseURL = 'https://api.themoviedb.org';\nconst API_KEY = 'c94d8e5ef8b4fe69956b21ebd01a6f37';\n\n// const AUTHORIZATION =\n//   'eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJjOTRkOGU1ZWY4YjRmZTY5OTU2YjIxZWJkMDFhNmYzNyIsInN1YiI6IjY1ZTg1MDMxM2ZlMTYwMDE2MjVjZTg3ZiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.ut43gbHMar0hOfK1FZIIz0nwPLqmUTw0HqWj4r3u8m4';\n\nexport const fetchTrendMovies = async () => {\n  const { data } = await axios.get(\n    `https://api.themoviedb.org/3/trending/movie/day?api_key=${API_KEY}`\n  );\n\n  return data;\n};\n\nexport const fetchMovieByName = async query => {\n  const { data } = await axios.get(\n    `${baseURL}/3/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n  );\n\n  return data;\n};\n\nexport const fetchMovieById = async movieId => {\n  const { data } = await axios.get(\n    `${baseURL}/3/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n\n  return data;\n};\n\nexport const fetchMovieCast = async movieId => {\n  const { data } = await axios.get(\n    `${baseURL}/3/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n\n  return data;\n};\n\nexport const fetchMovieReviews = async movieId => {\n  const { data } = await axios.get(\n    `${baseURL}/3/movie/${movieId}}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n\n  return data;\n};\n"],"names":["Wrapper","styled","_templateObject","_taggedTemplateLiteral","ReviewHeader","_templateObject2","ReviewList","_templateObject3","ReviewListItem","_templateObject4","Author","_templateObject5","Review","_templateObject6","NoReviewsText","_templateObject7","movieId","useParams","_useState","useState","_useState2","_slicedToArray","reviews","setReviews","useEffect","fetchReviews","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","_yield$fetchMovieRevi","results","_context","prev","next","fetchMovieReviews","sent","t0","console","log","stop","apply","arguments","_jsxs","children","_jsx","length","className","map","review","author","content","id","baseURL","API_KEY","fetchTrendMovies","_yield$axios$get","data","axios","concat","abrupt","fetchMovieByName","_ref2","_callee2","query","_yield$axios$get2","_context2","_x","fetchMovieById","_ref3","_callee3","_yield$axios$get3","_context3","_x2","fetchMovieCast","_ref4","_callee4","_yield$axios$get4","_context4","_x3","_ref5","_callee5","_yield$axios$get5","_context5","_x4"],"sourceRoot":""}